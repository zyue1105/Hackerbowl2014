[{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=410558","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"23","title":"Given a table: TABLE  Cust ID, Order ID, Date  Retrieve the customer who has ordered on two days ie., say 1st and 10th.  Also, is your query the most optimal one.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"It actually depends on the indexes.  if you have B+tree index on date, then AND is correct answer.  If you have B+tree index on custid, then using intersect is better."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select CustID from TABLE where Date=1 or Date=10"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"isn't davidf answer correct??"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I feel the one with the IN clause in the most optimal one , because the one with the subquery and the intersect clauses will take more time is a costlier SQL statement to execute."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from TABLE where TO_DATE(insertion_date,'DD-MON-YY')  IN  (TO_DATE('02-MAR-10','DD-MON-YY'),TO_DATE('04-MAR-10','DD-MON-YY')) >/"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"but is the date above actually specified?? no right. so how can we give the date like this? we may have to use GroupBy to group using the customer id and to count number of occurences to check if the entries are equal to 2 or more right? am not so good with sql queries..but is this logic correct?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Select Cust_ID,Date \n   from (select distinct cust_id, date  \nFrom table)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Select A.Cust_ID,A.Date \n   from (select distinct cust_id, date  \n   From table) A \n   Group By (A.Cust_id,A.date) \n   having count('*')=2"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select CustId, count(distinct Date) as num from TABLENAME group by CustID having num=2"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Select * from Test where Cust_id IN  (  Select Cust_Id from test  group by Cust_id Having COUNT(date)=2 )"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Wouldn't this work??"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select custid from orders ord_out  exists( select 1             from orders ord_in           where ord_in.custid=ord_out.custid                   and ord_out.ord_Date <> ord_in.ord_date);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT Cust_ID FROM Orders WHERE Order_Date = 1 INTERSECT SELECT Cust_ID FROM Orders WHERE Order_Date = 2;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select cust_id from  order_t t  where order_dttm=date1  and exists(select 1 from                   order_t t1 where t1.cust_id=t.cust_id                  t1.order_dttm=date2)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"Select * FROM Table WHERE Date IN[date1, date2];"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"select count(distinct Date) as num from TABLENAME group by CustID where num=2"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=163664","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"23","title":"How will u find the highest and second highest salary in each group using a single SQL query ?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"select max(sal) from emp  union select max(sal) from emp where sal not in (select max(sal) from emp)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"use the sql top command ..."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"one has to write a recursive query first find out the max(M1) ,then again find out the max such that max!= M1.implementation may vary from rdbms used but i guess logic is some what same"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Select Top 2 Salary From Salary_Table Order BY Salary DESC;  This works !"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from emp_tab where ( select count(*) from emp_tab st where st.sal < emp_tab.sal ) <= n ; ( here n is 2 )"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from emp_tab where ( select count(*) from emp_tab st where st.sal < emp_tab.sal ) <= n ; ( here n is 2 )"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I am not that familiar with writing complex sql queries,  but  1) Recursive queries? 2) select from another select?  When we have the 'top' command, which is highly likely to have been optimized by the Database, why does one have to go and try to come up with silly queries which are likely to be inefficient?  Correctness is not the only virtue..."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I completely agree with LOLer's logic!"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from emp e1 where ( select count(*) from emp e2 where e2.sal>e1.sal and e1.grp=e2.grp) < n  This query gives top 'n' salaries of each group..  The \"top\" and other such things are non standard constructs which are specific to a DBMS.."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select sal, deptno from \n(select sal, t.deptno, rank() over (partition by deptno order by sal desc) r \nfrom scott.emp t)  \nwhere r < 3"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Select * From Employee E1 Where (N-1) = (Select Count(Distinct(E2.Salary)) From Employee E2 Where E2.Salary > E1.Salary)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Assume salary table only has one column salary:  select t0.salary, count(t1.salary) rank from (select distinct salary from salary) t0 left outer join  (select distinct salary from salary) t1 on t0.salary < t1.salary group by t0.salary having rank < 2 order by t0.salary desc"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select distinct salary from emp e1 where 2 >= (select count(distinct(salary)) from emp2 where e1.salary<=e2.salary)        order by salary DESC);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Amit's solution works"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=7612664","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"19","title":"Given 3 tables: Employee (empid, empname), Employee_timesheet(empid, no_of_hours, date), Employee_hour_rate (empid, hour_rate). Calculate pay check of all employees on monthly basis.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"The following a working SQL query. You can try it yourself. -----------------------------------------------------------------------------------"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"create table employee(eid smallint,ename varchar(10));  insert into employee values(1 ,'Abhishek'); insert into employee values(2, 'Nikhil'); insert into employee values(3,'Rama'); insert into employee values(4 , 'Vidyut'); insert into employee values(5 , 'Pavan');  select * from timesheet;  create table timesheet(eid smallint,no_hrs smallint,cdate date);  insert into timesheet values(1,100 , '2011-06-30'); insert into timesheet values(2 , 105 , '2011-06-30'); insert into timesheet values(3 , 90 , '2011-06-30'); insert into timesheet values(4 , 85 , '2011-06-30'); insert into timesheet values(5 , 110 , '2011-06-30');   insert into timesheet values(5 , 110 , '2011-04-30'); insert into timesheet values(5 , 110 , '2011-06-30'); insert into timesheet values(4 , 110 , '2010-06-30'); insert into timesheet values(3 , 110 , '2011-03-30'); insert into timesheet values(2 , 110 , '2011-06-30'); insert into timesheet values(4 , 110 , '2011-08-30'); insert into timesheet values(5 , 110 , '2011-06-30'); insert into timesheet values(2 , 110 , '2010-06-30'); insert into timesheet values(1 , 110 , '2011-06-30'); insert into timesheet values(1 , 110 , '2010-06-30'); insert into timesheet values(3 , 110 , '2011-06-30'); insert into timesheet values(4 , 110 , '2010-06-30');   select * from hr_rate; +------+---------+ | eid | hr_rate | +------+---------+ | 1 | 50 | | 2 | 60 | | 3 | 40 | | 4 | 30 | | 5 | 80 |  create table hr_rate(eid smallint,hr_rate smallint);  insert into hr_rate values(1,50); insert into hr_rate values(2,60); insert into hr_rate values(3,40); insert into hr_rate values(4,30); insert into hr_rate values(5,80);   select e.ename,month(t.cdate),year(t.cdate),sum(t.no_hrs*hr.hr_rate) from employee e,timesheet t,hr_rate hr where e.eid=t.eid and e.eid=hr.eid group by e.ename,month(t.cdate),year(t.cdate) order by ename,year(t.cdate),month(t.cdate)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT  \n    E1.empid, \n    E1.empname, \n    E2.Hours_rate*E3.total as SAL \nFROM  \n    PWM.EMP as E1,  \n    PWM.emp_rate as E2,  \n    (  \n    SELECT  \n        EMPID,  \n        SUM(HOURS) as total  \n    FROM  \n        PWM.EMP_TIMESHEET  \n    WHERE  \n        DATE     > '2011-01-01'  \n        and DATE < '2011-10-01'  \n    GROUP BY  \n        EMPID  \n    ) as E3 where E1.empid = E2.empid and E1.empid =E3.empid"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select emp.empname, ab.yearmonth, total_hours*ehr.hour_rate from employee emp inner join ( select b.yearmonth,b.empid, sum(b.no_of_hours) total_hours  (  select CAST(datepart(year,ts.date) AS VARCHAR(6)) + CAST(datepart(month,ts.date)  AS VARCHAR(6)) as yearmonth,   ts.empid, ts.no_of_hours, date  from Employee_timesheet ts  ) b group by b.yearmonth, b.empid ) ab on ab.empid = emp.empid inner join employee_hour_rate ehr on ehr.empid = emp.empid"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I believe following query shud work. Natural join. Group by month  select EE.empname, ET.yearmonth, sum(ET.total_hours)*EHR.hour_rate payrate from Employee EE, Employee_timesheet ET, Employee_hour_rate EHR  group by extract(month from date)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select e.empid,        e.empname,        to_date(date,'MM') as month,        sum(et.no_of_hours)*ehr.hour_rate from Employee as e, Employee_timesheet as et, Employee_hour_rate as ehr where e.empid = et.empid and   e.empid = ehr.empid group by e.empid, e.empname, to_date(date,'MM'), ehr.hour_rate"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT  e.empid,  e.empname,  CAST(YEAR(t.date) AS VARCHAR) + '/' + CAST(MONTH(t.date) AS VARCHAR) AS ReportingMonth,  SUM(no_of_hours) * r.hour_rate AS Total FROM  Employee AS e INNER JOIN  Employee_timesheet AS t ON e.empid = t.empid INNER JOIN  Employee_hour_rate AS r ON e.empid = r.empid GROUP BY  e.empid, e.empname, r.hour_rate, CAST(YEAR(t.date) AS VARCHAR) + '/' + CAST(MONTH(t.date) AS VARCHAR)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select e.epname,v.total from Employee e JOIN (select sum(empt.hours)*empr.rate TOTAL_SAL,empid FROM employee_timesheet empt JOIN employee_hour_rate empr ON empid WHERE empt.date between (select trunc(sysdate, 'MM')as start_date from dual) AND (select add_months(trunc(sysdate, 'MM'), 1) -1 as last_date from dual)  group by empid) USING empid"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT E.ENAME,SUM(ET.NO_OF_HOURS*ER.HOUR_DATE) FROM EMPLOYEE E,EMPLOYEE_TIMESHEET ET,EMPLOYEE_HOR_RATE EH WHERE E.EMPID=ET.EMPID AND EH.EMPID=E.EMPID AND TO_CHAR(DATE,'MM')=TO_CHAR(SYSDATE,'MM') GROUP BY E.ENAME"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"create table employee ( \nempid int auto_increment primary key, \nname varchar(20))TYPE=InnoDB; \n \ncreate table employee_time( \ntimeid int(10) auto_increment primary key, \nemp_id int, \nno_of_hours int(10), \nedate datetime, \nindex(emp_id), \nforeign key (emp_id) references employee(empid))TYPE=InnoDB; \n \ncreate table employee_rate( \nrateid int auto_increment primary key, \nemp_id int, \nrate int, \nforeign key (emp_id) references employee(empid))TYPE=InnoDB; \n \ninsert into employee(empid, name) values(1, 'adam'); \ninsert into employee(empid, name) values(2, 'eve'); \n \ninsert into employee_time(emp_id,no_of_hours,edate) values(1,8,'2013-02-26'); \ninsert into employee_time(emp_id,no_of_hours,edate) values(1,8,'2013-02,25'); \ninsert into employee_time(emp_id,no_of_hours,edate) values(1,8,'2013-02-24'); \ninsert into employee_time(emp_id,no_of_hours,edate) values(1,8,'2013-03-01'); \n \ninsert into employee_time(emp_id,no_of_hours,edate) values(2,8,'2013-02-26'); \ninsert into employee_time(emp_id,no_of_hours,edate) values(2,8,'2013-02,25'); \n \ninsert into employee_rate(emp_id,rate) values(1,10); \ninsert into employee_rate(emp_id,rate) values(2,10); \n \nselect * from employee; \nselect * from employee_time; \nselect * from employee_rate; \n \nselect name, sum(no_of_hours*rate) as salary from employee e,employee_time t, employee_rate r \nwhere e.empid = t.emp_id and t.emp_id = r.emp_id and t.edate between '2013-02-01' and '2013-02-28' group by name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select e.empid, e.empname, T.yearR, T.monthR, T.salary from guol.emp e left join ( select h.empid as eid, extract(year from t.dateE) as yearR, extract(month from t.dateE) as monthR, sum(t.no_of_hours*h.rate) as salary from guol.emp_h h, guol.emp_t t where h.empid=t.empid group by h.empid, extract(year from t.dateE), extract(month from t.dateE) ) T on e.empid=T.eid ;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"CREATE TABLE #EMPLOYEE(EMPID INT,EMPNAME VARCHAR(30))  CREATE TABLE #EMPLOYEE_TIMESHEET(EMPID INT,NOOFHOURS NUMERIC(9,3),DATE SMALLDATETIME)  CREATE TABLE #EMPLOYYEHOURRATE (EMPID INT,HOUR_RATE NUMERIC(9,3))    INSERT INTO #EMPLOYEE (EMPID,EMPNAME)  VALUES (1,'SAI')        ,(2,'MIKE')        ,(3,'JOHN')    SELECT'EMPLOYEE' SELECT * FROM #EMPLOYEE       INSERT INTO #EMPLOYEE_TIMESHEET (EMPID,NOOFHOURS,DATE)   VALUES (1,40,GETDATE())              ,(1,45,'4/30/2013')          ,(1,45,'4/29/2013')                 ,(2,40,GETDATE())            ,(2,50,'12/1/2012')         ,(2,75,'12/31/2012')           ,(3,40,GETDATE())         SELECT'EMPLOYEE_TIMESHEET' SELECT * FROM #EMPLOYEE_TIMESHEET         INSERT INTO #EMPLOYYEHOURRATE (EMPID,HOUR_RATE)   VALUES (1,'45')         ,(2,'50')         ,(3,60)      SELECT'EMPLOYEE_HOURRATE' SELECT * FROM #EMPLOYYEHOURRATE         SELECT E.EMPNAME,SUM(ET.NOOFHOURS * EHR.HOUR_RATE) AS PAY,MONTH(ET.DATE) AS Month,YEAR(ET.DATE) AS Year      FROM #EMPLOYEE E      INNER JOIN #EMPLOYEE_TIMESHEET ET ON ET.EMPID =  E.EMPID      INNER JOIN #EMPLOYYEHOURRATE EHR ON EHR.EMPID = E.EMPID      GROUP BY E.EMPNAME,MONTH(ET.DATE),YEAR(ET.DATE)      ORDER BY 1         DROP TABLE #EMPLOYYEHOURRATE         DROP TABLE #EMPLOYEE_TIMESHEET         DROP TABLE #EMPLOYEE"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"CREATE TABLE #EMPLOYEE(EMPID INT,EMPNAME VARCHAR(30))  CREATE TABLE #EMPLOYEE_TIMESHEET(EMPID INT,NOOFHOURS NUMERIC(9,3),DATE SMALLDATETIME)  CREATE TABLE #EMPLOYYEHOURRATE (EMPID INT,HOUR_RATE NUMERIC(9,3))    INSERT INTO #EMPLOYEE (EMPID,EMPNAME)  VALUES (1,'SAI')        ,(2,'MIKE')        ,(3,'JOHN')    SELECT'EMPLOYEE' SELECT * FROM #EMPLOYEE       INSERT INTO #EMPLOYEE_TIMESHEET (EMPID,NOOFHOURS,DATE)   VALUES (1,40,GETDATE())              ,(1,45,'4/30/2013')          ,(1,45,'4/29/2013')                 ,(2,40,GETDATE())            ,(2,50,'12/1/2012')         ,(2,75,'12/31/2012')           ,(3,40,GETDATE())         SELECT'EMPLOYEE_TIMESHEET' SELECT * FROM #EMPLOYEE_TIMESHEET         INSERT INTO #EMPLOYYEHOURRATE (EMPID,HOUR_RATE)   VALUES (1,'45')         ,(2,'50')         ,(3,60)      SELECT'EMPLOYEE_HOURRATE' SELECT * FROM #EMPLOYYEHOURRATE         SELECT E.EMPNAME,SUM(ET.NOOFHOURS * EHR.HOUR_RATE) AS PAY,MONTH(ET.DATE) AS Month,YEAR(ET.DATE) AS Year      FROM #EMPLOYEE E      INNER JOIN #EMPLOYEE_TIMESHEET ET ON ET.EMPID =  E.EMPID      INNER JOIN #EMPLOYYEHOURRATE EHR ON EHR.EMPID = E.EMPID      GROUP BY E.EMPNAME,MONTH(ET.DATE),YEAR(ET.DATE)      ORDER BY 1         DROP TABLE #EMPLOYYEHOURRATE         DROP TABLE #EMPLOYEE_TIMESHEET         DROP TABLE #EMPLOYEE"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select  \n emp.eid,  \n to_char(emp_timesheet.edate, 'MM-YYYY') month_year, \n sum(emp_timesheet.no_hrs) total_hrs_month, \n (sum(emp_timesheet.no_hrs) * emp_hour_rate.hour_rate) pay_check \nfrom  \n emp, emp_timesheet, emp_hour_rate \nwhere  \n emp.eid = emp_timesheet.eid and emp.eid = emp_hour_rate.eid \ngroup by  \n emp.eid, to_char(emp_timesheet.edate, 'MM-YYYY'), emp_hour_rate.hour_rate"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"mysql> select * from employee; +-----+----------+ | eid | ename    | +-----+----------+ |   1 | Abhishek | |   2 | Nikhil   | |   3 | Rama     | |   4 | Vidyut   | |   5 | Pavan    | +-----+----------+ 5 rows in set (0.00 sec)  mysql> select * from timesheet; +------+--------+------------+ | eid  | no_hrs | cdate      | +------+--------+------------+ |    1 |    100 | 2011-06-30 | |    2 |    105 | 2011-06-30 | |    3 |     90 | 2011-06-30 | |    4 |     85 | 2011-06-30 | |    5 |    110 | 2011-06-30 | +------+--------+------------+ 5 rows in set (0.00 sec)  mysql> select * from hr_rate; +------+---------+ | eid  | hr_rate | +------+---------+ |    1 |      50 | |    2 |      60 | |    3 |      40 | |    4 |      30 | |    5 |      80 | +------+---------+ 5 rows in set (0.00 sec)  mysql> select Employee.ename,timesheet.no_hrs,hr_rate.hr_rate,timesheet.no_hrs*hr_rate.hr_rate as TOTAL     -> from Employee inner join timesheet using (eid)     -> inner join hr_rate using (eid)     -> where DAY(timesheet.cdate) = DAY(LAST_DAY(CURDATE())); +----------+--------+---------+-------+ | ename    | no_hrs | hr_rate | TOTAL | +----------+--------+---------+-------+ | Abhishek |    100 |      50 |  5000 | | Nikhil   |    105 |      60 |  6300 | | Rama     |     90 |      40 |  3600 | | Vidyut   |     85 |      30 |  2550 | | Pavan    |    110 |      80 |  8800 | +----------+--------+---------+-------+ 5 rows in set (0.00 sec)"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=133886","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"19","title":"Given the following MySQL table schema, write a query to return the employee with the 7th highest salary.  CREATE TABLE `employee_salary` (   `id` int(11) NOT NULL auto_increment,   `name` varchar(255) NOT NULL,   `salary` decimal(10,2) NOT NULL,   PRIMARY KEY  (`id`),   KEY `IDX_salary` (`salary`) ) ENGINE=MyISAM DEFAULT CHARSET=latin1  My Answer:","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"select * from employee_salary order by salary desc limit 6,1"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"To find the Nth Maximum Salary, you can use the following correlated query:  select * from employee_salary E1 where (N-1) = (select Count(Distinct(E2.Salary)) from employee_salary E2 where E2.Salary > E1.Salary );  However, the time taken would be quadratic in nature."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT name, salary FROM Employees ORDER BY salary, desc )LIMIT 6,1"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select name from employee where salary = ( select salary from ( select distinct(salary) from employee order by salary)      where rownum =7)   )"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"sorry for the above !!  select name from employee where salary = (select salary from (select salary from employee order by salary desc) where rownum=7);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"one comment: the employee with the 7th highest salary may be more than 1 person. That is all."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select emp, sal from  ( select dense_rank() over (order by sal desc NULLS LAST) ds from emp1) t1 where t1.ds = 7;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SQL> select min(temp.sal) from (select distinct sal from emp order by sal desc) temp where rownum <= 7;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT * FROM employee_salary WHERE salary = (SELECT salary FROM employee_salary ORDER BY salary DESC LIMIT 7,1);  This will work, tested, OK"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"-- in Oracle using analytic function \nselect id, name, salary \n  from ( \n          select id, name, salary, \n                 rank() over (order by salary desc, rownum asc) rn \n            from employee_salary \n       ) \n where rn = 7;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * \nfrom employee \nwhere salary=( \nselect min(salary) \nfrom ( \nselect e.eid, e.salary \nfrom employee e \norder by e.salary) \nwhere rownum<=7) \n;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select b.*from employee_salary e1  inner join (SELECT e.id,e.name,sum(e.salary)over()as total,e.salary,DENSE_RANK() over (order by e.salary) as emprank  FROM employee_salary E         ) b  on b.id = e1.id  where b.emprank = 3"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Sorry I meant employee rank = 7.This query worked for me in SQL Server 2008 R2"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from employee where salary = (select distinct(salary) from employee order by salary desc limit 6,1)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I know there's wording issues in the question, but the 7th highest salary should refer to 7th highest pay scale.    Lets say Bob A, Bob B, Bob C, Bob D, Bob E, Bob F, Bob G are all at salary cap.  Using the queries in other examples, Bob G would be returned as having the 7th highest salary.  Even though he's as max salary which would be False.  It would also only return Bob G because of where his name lies alphabetically.    This query would return all employees who are at the 7th highest salary as the question asks."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=64251","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"18","title":"How would you save a graph to a database?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Point table Point pair table indicates the edge in the graph"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"One point pair table and include each edge only once."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Am new to DB. Can anybody explain it more elaborately."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"hey i could not find anything like point table as standard is it your abbreviation for any use of any data structure or any standard"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Some sort of an adjacency list where node is the key which contains a multivalued attribute column neighbour."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"take table as a matrix and use matrix representation of graph. suppose that a,b,c,d are node in a graph than use column name in a table as a,b,c and d. and put single row in this table corresponding to node."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"take table as a matrix and use matrix representation of graph. suppose that a,b,c,d are node in a graph than use column name in a table as a,b,c and d. and put single row in this table corresponding to node."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"http://bytes.com/topic/sql-server/answers/854993-speed-q-storing-large-graphs-db-inserting-several-million-rows-research-proj"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Storage Engine - MEMORY."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Store Nodes in an Array  For each node, Store Its adjacencey list in a LInked List!"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Store Nodes in an Array  For each node, Store Its adjacencey list in a LInked List!"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Use Clustered Index method  create table having  as each vertex might point to more than one vertex there is a possibility of vertex getting repeated. So Clustered Indexing works well"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"For a directed graph Vertex(ID,X,Y) Primary Key:ID  VertexNeighbour(ID,NeighbourVertextID,EdgeVal) Primary Key: [ID,NeighbourVertextID] NeighbourVertextID reference ID"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"For a directed graph Vertex(ID,X,Y) Primary Key:ID  VertexNeighbour(ID,NeighbourVertextID,EdgeVal) Primary Key: [ID,NeighbourVertextID] NeighbourVertextID reference ID"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Table Graph ( point,   x_axis,   y_axis )  data looks like  1,2,3 2,3,4 .... ...."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Table NODE_ID     Adjacent_Node_ID  This will be enough to represent a graph."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"vertex(point_id, point_value) ;  edge(point_id_parent, point_id_child, edge_value);"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=245699","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"17","title":"Interview for Kindle in Amazon Chennai.  couple of questions on basic sql 1.get max salary of employees from each dept. 2. Find 3rd max sal of employees given a dept.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SQL: SELECT min(salary) FROM (SELECT TOP 3 salary FROM employee WHERE deptid = )"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"@above  What if three employees the same highest salary?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"@above ^ I think it should work."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"TOP operator eliminates duplicate by default. So, there is no need to use Distinct here."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"The absolute right one would be: SELECT min(salary) FROM  (SELECT Distinct TOP 3 salary FROM employee WHERE deptid =   ORDER BY salary)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Actually the above query is wrong too.  Missing order by salary \"desc\"."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Hi I dont know how you are able to write queries without any tables?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I tested them on SQL Server: select d.DeptName,max(e.SALARY) as SALARY from EMPLOYEE e  inner join DEPARTMENT d on e.DeptID = d.DeptID group by d.DeptName;  select MIN(ta.SALARY) from (select top 3 SALARY from EMPLOYEE e inner join DEPARTMENT d on e.DeptID = d.DeptID where d.DeptName='Marketing' order by e.SALARY desc) ta;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select salary,deptid from employee where salary=(select max(salary) from employee where salary<(select max(salary) from employee where salary<(select max(salary) from employee)))  just tried! Correct me if i am wrong :)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Use Partition by"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"the above answers did not consider the situation that multiple employees may have the same highest salary. here is my answer tested in the mysql: SELECT temp.max_salary, ssn, dno from employee inner join  (select max(salary) as max_salary, dno as dnum from employee group by dno) temp where employee. salary = max_salary and employee.dno= temp.dnum"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Second max salary"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"In MySQL: 1) SELECT d.deptid, max(e.salary) FROM employee e INNER JOIN department d ON e.deptid = d.deptid GROUP BY d.deptid. 2)SELECT salary FROM employee WHERE deptid =  GROUP BY salary DESC LIMIT 2,1;"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=15419917","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"16","title":"Suppose a customer buys items for $10 in a shop and the cashier swipe her card at a POS charging $10. Assume that the card has $100 balance before swiping. POS sends the $10 transaction to a machine A in the Amazon cloud. A calls a service to update transaction and card balance, and then sends acknowledgement back to the POS. But the ack got lost in the middle and POS sends another $10 transaction request. How would you make sure that the balance is $90, not $80. And how would you distinguish multiple try with two legitimate $10 transaction back to back.   Hint: You can't use more than one transaction entry in Database and you don't have the rollback provision.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"Machine A is in cloud so it doesn't save state of a transaction. The next transactin could go through machine B.  Answer is to send remaining balance in the transaction instead of transaction amount. This is a standard practice in payment systems."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"This is what I have in mind ... Because the ack from the cloud is lost, at the POS it is not known that the amount has been debited ... there can be a provision at the POS to request for ack alone when ack is not received ... not sure if this is enough ...   also if possible unique product id can be used for tracking purchase transaction of a product ... this will be known at the cloud and will reject the next swipe and the previous generated ack can be sent ... please let me know if I am missing anything"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"use a simple transcation id when sending the request. this is a simple retry tech. I learned it in my os class."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"The cloud must save last transaction id generated from unique product id or bill id , and must not allow it next time , instead just send back the ack ."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"The POS could use codes while sending requests. For eg.  Normal Request : 1 Failed/Re-Requesting : 2 Rollback/Cancel : 3 etc. Because only POS machine knows if the ack was received or not."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"[The idea stems from my Computer Networks course] The POS could associate a transaction ID to the transaction. After sending a request the POS could start a timer. If the timer runs out, it sends the transaction request again along with the transaction ID. The back end ensures that transactions with same IDs are not carried out again. The ID however, could be hashed by the backend before storing. (There are many security issues with this approach. But I think the answer would suffice for the interviewer)."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"another relevent question....suppose even after the retries, the ack is not receieved...how does one ensure that money is deposited back into the amount?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"There can be only one transaction enter into the database so when it will try to send another transaction request,it will not allow and it should retry same transaction which was failed earlier"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=8737080","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"16","title":"Find the oldest customer in your database","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select C1.* from customer C1 where C1.birth_date in (select min(C2.birth_date) from customer C2);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select c1.name from customer c1 where c1.dateOfBirth = (select min(c2.dateOfBirth) from customer c2)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"you are rigth ankush. i didn't understand problem properly."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select last(date_coulmn,customer from table...isn't it it will return oldest entery according to date..correct me if m wrong"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT * FROM Customers WHERE age=(SELECT MAX(age) from Customers);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT TOP 1 from Customer Order BY CustomerID"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select C1.* from Customers C1 where not exists( select 1 from Customers C2 where C2.age > C1.age)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select name from customer where a=min(customer ID); I think this query will fetch the right data from the table"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=15027865","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"14","title":"EMP (empno, name, deptno, salary) DEPT (deptno, name)  Write a SQL query that tells me the average salary by department name.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"4","title":"SELECT spt.name,avg.average  FROM DEPT AS dpt LEFT OUTER JOIN  (  SELECT deptno,AVG(salary) as average FROM EMP  GROUP BY deptno )as avg ON avg.deptno = spt.deptno"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"3","title":"select name,avg(salary) from emp e join dept d on e.deptno = d.deptno group by name;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"SELECT: d.name, AVG(e.salary) FROM: DEPT d, EMP e WHERE: d.deptno = e.deptno GROUP By: d.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT d.name AS DeptName, AVG(e.salary) AS AvgSalary FROM DEPT AS d LEFT OUTER JOIN EMP AS e ON d.deptno = e.deptno GROUP BY d.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"create table #emp(empno int not null,name varchar(30),deptno int,salary decimal(9,3))    create table #dept (deptno int,deptname varchar(50))    insert into #dept (deptno,deptname)    values (1,'IT')           ,(2,'Ops')           ,(3,'fin')           ,(4,'maint')    insert into #emp(empno,name,deptno,salary)    values (1,'sai',1,70000)              ,(2,'mike',1,'90000')              ,(3,'mark',3,'90000')              ,(4,'linn',3,'80000')              ,(5,'mill',2,'70000')              ,(6,'jazz',2,'80000')         select * from #emp            --Direct Solution : 1      select 'm1'      SELECT D.deptno,AVG(E.salary) AS AvgDeptSalary                    FROM #emp E right JOIN #dept D ON D.deptno = E.deptno                    GROUP BY D.deptno          --Using a sub-query    select'm-2'    SELECT e.deptname,d1.AvgDeptSalary     FROM #dept E     LEFT JOIN (SELECT D.deptno,AVG(E.salary) AS AvgDeptSalary                    FROM #emp E LEFT JOIN #dept D ON D.deptno = E.deptno                    GROUP BY D.deptno                   ) D1 ON D1.deptno = E.deptno              drop table #emp         drop table #dept"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select d.name,AVG(e.salary) from emp12 e join dept12 d on e.deptno=d.deptno  group by d.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT (SUM(e.salary)/COUNT(d.dep_id)) AS Average, d.dep_name, d.dep_id FROM employee e, department d WHERE e.dept_no = d.Dep_id GROUP BY d.dep_id  SELECT AVG(e.salary) AS Average, d.dep_name, d.dep_id FROM employee e, department d WHERE e.dept_no = d.Dep_id GROUP BY d.dep_id"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"create table employee \n( \nid number(5), \nname char(20), \ndept char(20), \nage number(2), \nsalary number(10), \nlocation char(10), \ndeptid number(5) \n \n); \n \ncreate table department \n( \nid number(5), \nname char(20) \n \n); \n \nINSERT INTO employee values (1 , \"Abhi\" , \"Science\" , 30 , 100 , \"Delhi\",1); \nINSERT INTO employee values (2 , \"Dishika\" , \"Commerce\" , 27 , 50 , \"Varanasi\",2); \nINSERT INTO employee values (3 , \"Umesh\" , \"Science\" , 32 , 110 , \"Meerut\",1); \nINSERT INTO employee values (4 , \"Ishan\" , \"Science\" , 22 , 10 , \"Varanasi\",1); \nINSERT INTO employee values (5 , \"Divyani\" , \"Commerce\" , 21 , 5 , \"Varanasi\",2); \n \n \n \nINSERT INTO department values (1, \"computer\");  \nINSERT INTO department values (2, \"finance\"); \nINSERT INTO department values (3, \"human resource\"); \n \n \nSELECT d.name, avg(e.salary) AvG_Sal \nfrom department d LEFT OUTER JOIN employee e \non d.id   = e.deptid  \nGroup by d.name;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select dept.name, coalesce(avg(emp.salary), 0) as avg_salary \nfrom dept \nleft join emp \non dept.deptno = emp.deptno \ngroup by dept.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"SELECT d.deptno, avg(e.salary) from emp e, dept d WHERE e.deptno = d.deptno GROUP BY d.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-2","title":"SELECT d.deptno, avg(r.salary) from emp e, dept d WHERE e.deptno = d.deptno GROUP BY d.name"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-2","title":"select deptname, avg(salary) \nfrom dept  \ngroup by deptname;"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=9622887","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"9","title":"I was asked this question during one of my interviews. Can you do JOIN using UNION keyword? Can you do UNION using JOIN keyword?  Can you give me an example of how to do this if possible?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"You can sort of do a union with a full outer join.  It works as long as none of the values that you're joining overlap in each table.  Try this:"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Using SQL queries that require 'OR' condition can be done either using JOIN or UNION"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I don't think its possible because Join increases the number of column while UNION  increases the number of rows"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I agree with previous comment. Otherwise, one would need more clarification from interviewer to know exactly what he intends to say since, this look pretty trivial."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"The question is just a trap. Join is a projection,union is a selection. Join is used to perform a relation between 2 or more tables( or 2 instances of the same table), where as UNION just adds two result sets.."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"FULL OUTER JOIN is a UNION of LEFT JOIN and RIGHT JOIN"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"UNION and JOINS are both different concepts. Indeed you can do this to achieve the same results but both are different in terms of executions and plan creation.  JOIN affect the SELECTIVITY while UNION is considered while PROJECTING  the data."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"UNION and JOINS are both different concepts. Indeed you can do this to achieve the same results but both are different in terms of executions and plan creation.  JOIN affect the SELECTIVITY while UNION is considered while PROJECTING  the data."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"It is based on use case. It can be done."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=7161154","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"8","title":"When you are asked to tune the performance of a SQL query, list the checklist you would do.  Note: you cannot use index.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"SQL Tuning/SQL Optimization Techniques:  1) The sql query becomes faster if you use the actual columns names in SELECT statement instead of than '*'.  For Example: Write the query as  SELECT id, first_name, last_name, age, subject FROM student_details;  Instead of:"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"At each stage , use Explain or Explain Plan ( as it is the case depending on the various databases and interfaces ) , so that you can see the cost of running the query , and keep optimizing using the above mentioned highlighted points , and see if the cost of the query can be minimized. Other things that can be checked to see if the query is optimized , is to check for proper indexes (that should be  excluded as per the question , I guess) , and usage of table spaces while creating tables , not using many temporary tables while performing secondary queries on them , instead creating views/materialized views on behalf of those temporary tables would enhance the query cost a lot."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"All of the above tips are from \"http: //beginner-sql-tutorial.com/sql-query-tuning. htm\" I just copied it here for your easy reference (remove whitespaces in above link)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"We can use Histograms for Query Optimization"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"One simple tips for tuning up query is to first filter on most common dataset and then least common dataset. This make sure query execution plan is optimized. Some of the advance databases already takes care of this regardless of what is in where clause.  For example, to find details of city in world  we can first filter based on continents which is most common, followed by country then state then county or district and then city. So query would look like Select * from city where continent = NA and country = USA and state = CA and county = OC and city = Irvine  Next step is to make sure to have index on frequently used columns in where clause. But having more indices on table also reduces performance so care has to be taken."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"5) Use EXISTS instead of DISTINCT when using joins which involves tables having one-to-many relationship.  For Example: Write the query as  { SELECT d.dept_id, d.dept  FROM dept d  WHERE EXISTS ( SELECT 'X' FROM employee e WHERE e.dept = d.dept);   what is 'X\"?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"\"X\" is just a placeholder for the exists query.  With the exist clause you are only interested in whether or not the sub query returns a value... any value.  It's like a true/false response.  \"X\" was chosen arbitrarily,  any other number or letter would have the same effect."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=165076","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"8","title":"Given a table: CustomerOrders:  Customer Orders ------------------------------- Customer ID   |    Order ID    | Order Date  1. Write a SQL to find all customers who has placed an order today.  2. Write a SQL to find all customers who has placed an order today AND yesterday.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"SELECT * FROM CustomerOrders WHERE OrderDate > sysdate - 1;  AND  SELECT * FROM CustomerOrders WHERE customerID IN ( SELECT customerID FROM CustomerOrders WHERE OrderDate > sysdate - 1 INTERSECT SELECT customerID FROM CustomerOrders WHERE TO_DATE(OrderDate,'DD-MON-YYYY') > TO_DATE(SYSDATE,'DD-MON-YYYY') - 2 AND TO_DATE(OrderDate,'DD-MON-YYYY') < TO_DATE(SYSDATE,'DD-MON-YYYY') );"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"1. select Customer ID    from CustomersOrders    where Order Date=\"2009-09-02"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"2.select * from CustomerOrders where OrderDate in (\"2009-09-02\",\"2009-09-03\") group by CustomerID having count(OrderDate)==2"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Well, i do notice that its been long time since anyone replied to this thread but probably this would help the new guys. A mysql version doesn't have to more complicated that this  1. SELECT * FROM CustomerOrders WHERE OrderDate = CURDATE(); 2. SELECT * FROM CustomerOrders WHERE OrderDate in (CURDATE(),DATE_SUB(CURDATE(),INTERVAL 1 DAY));"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I think we need an inner join to do this task:  select distinct(c.Customer ID) from CustomersOrders c, CustomersOrders c1 where c.customer Id = c1.Customer Id AND       c.Order Date= sysdate AND       c1.Order Date= sysdate"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select custom_id from customer_order where date = today intersect  select custom_id from customer_order where date = yesterday"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"1. SELECT CustomerID from CustomerOrders WHERE OrderDate = date(); 2. SELECT CustomerID from CustomerOrders WHERE OrderDate = date()      INTERSECT     SELECT CustomerID from CustomerOrders WHERE OrderDate = (date() - 1);"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=13984664","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"7","title":"System that can have 10K requests in a second. We need to save only the number of queries in a table. After 5 year user may want to see 5 years old history. user may want to see monthly history, history per yer, or per minute, per second(zoom in, zoom out). How would you design database.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"The granularity of the historical data can be used to design this system.  There can be 2 in memory data points for current second and current minute. Which can be inserted into DB every minute. Then a separate process can aggregate data on a monthly and yearly basis.  To deal with the data volume, the count per second can be rolled up into the minutes row.  Minutes Data table: Timestamp  |  Count  |  Details   Timestamp  = For each minute Count  = count Details = breakdown for that second, a comma separated string of counts for each second in that minute."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"use SQL CUBE/ ROLLUP command and design database accordingly"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I think there are two parts to this question. One is how would I design the database now to start logging requests? and the other is, how would I want to store historic data? I have no choice but to log request in the least granularity requested with rollups to desired higher granularity when fetching em from the table. I would obviously have to back up data after it gets too crazy and store it on Archive storage engine to save space (this isnt the best deal if we plan on going back to historic data and query frequently because archive tables dont support indexes)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"B-Tree/B+Tree??"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I would use a star schema with one Dimension.  Fact table would hold the number of requests processed and the DateTime Dimension table can hold all the attributes such as sec,  minute, hour, date, day, month, quarter, year etc."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"yes, most likely this is web site monitoring table, table partition by month make sense, also try to make the table wider in stead of growing the rows.."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=7359661","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"7","title":"For any table, say order table, it was loaded some data double. Write a query to list the double loaded records with all columns and double primary key, but each double records only show once.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"create table temp(id int primary key, value nvarchar(256))  insert into temp values(1,'a') insert into temp values(2,'b') insert into temp values(3,'b') insert into temp values(4,'c')   select distinct t1.value from temp t1,temp t2 where t1.value = t2.value and t1.id <> t2.id  --OR   select count(*),t.value from temp t group by t.value having count(*) > 1"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"a primary key cannot be double it has unique values ?????/"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I think the interviewer is curious about the GROUP BY in Database."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Question is not clear. How were duplicate rows inserted into the table when it has a primary key?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"assuming primary key is logical and no PK constraint created  select * from order a where rowid in  (select min(rowid) from order b where a.orderid=b.orderid)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select t1.id, t2.id, t1.name from orderT t1, orderT t2 where t1.name=t2.name and t1.id>t2.id"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"hi"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=7249154","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"7","title":"Table: Order (OrderID, OrderDate) OrderItem (ItemID, OrderID)  Query: 1. List all orders put yesterday. 2. How many items were ordered yesterday? 3. List all orders which order more than 3 items yesterday. 4. How many orders which order more than 3 items yesterday?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"select * from CustOrder where to_char(order_date)=to_char(current_date - 1); \n \nselect count(*) from CustOrder, CustOrderedItem where CustOrder.order_id=CustOrderedItem.order_id and to_char(CustOrder.order_date)=to_char(current_date - 1); \n \nselect order_id from CustOrder where to_char(order_date)=to_char(current_date - 1) and order_id in (select order_id from CustOrderedItem group by order_id having count(*) > 3); \n \nselect count(order_id) from CustOrder where to_char(order_date)=to_char(current_date - 1) and order_id in (select order_id from CustOrderedItem group by order_id having count(*) > 3);"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"1. select * from Order where OrderDate = (date() - 1); 2. select count(*) from OrderItem where OrderID in (select OrderID from Order where OrderDate = (date() - 1)); 3. select orderid from (select Order.OrderID as orderid, count(*) as count from OrderItem INNER JOIN Order on OrderItem.OrderID = Order.OrderID where Order.OrderDate = (date() - 1) group by Order.OrderID) where count > 3; 4. select count(*) from (select Order.OrderID as orderid, count(*) as count from OrderItem INNER JOIN Order on OrderItem.OrderID = Order.OrderID where Order.OrderDate = (date() - 1) group by Order.OrderID) where count > 3;"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"I think the answer for the 2nd one should be:"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"select * from OrderTab where DATEDIFF(d, OrderDate, getdate()) = 1 \n \nselect count(*) from OrderTab where DATEDIFF(d, OrderDate, getdate()) = 1 \n \nselect * from OrderTab inner join OrderItem  \non OrderTab.OrderId = OrderItem.OrderId \nwhere DATEDIFF(d, OrderDate, getdate()) = 1  \ngroup by OrderTab.OrderId, OrderDate, ItemId, OrderItem.OrderId \nhaving Count(ItemId) > 3"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=17466666","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"5","title":"what is Materialized view, is any different from View.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Materialized view is a Cached View basically used for fast data access."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Materialized view is disk based and are updated periodically. Views are virtual and the underlying query is executed everytime the view is accesed."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Materialized view is the result set of a query  View is thought of as a virtual table, that is, a table that does not really exist in its own right but is instead derived from one or more underlying base table."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"View shows underlying table data changes in real time and Materialized view is a snap shot and needs to be updated periodically.  Materialized view is a way of denormalizing data to avoid repetitive expensive joins ."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"\"Materialized View(MV)\" is different from \"View(V)\" for below reasons: 1) MV is stored on disk 2) The reason MV is stored on disk is to reduce the computation time i.e. in data warehousing environments we use aggregated or summary tables, these summary/aggregate tables are created before hand in the form of MV and stored on disk. 3) Materialized view is a name in oracle environment and in sql server it is known by indexed views."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=6247401723527168","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"1","title":"Difference between inner join and left join?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"INNER JOIN: Returns all rows when there is at least one match in BOTH tables LEFT JOIN: Return all rows from the left table, and the matched rows from the right table RIGHT JOIN: Return all rows from the right table, and the matched rows from the left table FULL JOIN: Return all rows when there is a match in ONE of the tables  From W3Schools website."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=7774671","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"5","title":"Design the ER diagram for a movie rental store.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"3","title":"Order(id long pk, userId long fk, rentedOn date, returndate date) payment(id long pk, amount double, paid boolean) User(id long pk, username string, password string, email string) user_order(userid long references user(id), order_id long references order(id)) 1:m order_payment(order_id long references order(id), payment_id references payment(id)) 1:m Movie(id long pk, name string, year short) Order_movie(order_id long references order(id), movie_id long pk references movie(id)) 1:m StarCast(id long pk, name string) Movie_starcast(movie_id long references movie(id), cast_id long references starcast(id)) role(id long pk, title string) cast_role(cast_id id fk references starcast(id), role_id fk references role(id)) 1:m"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"@Karthik As far as my knowledge goes and what I learnt is.. any enterprise application development starts from identifying entities/objects, relationships among them and them map to persistence store."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"User(id long pk, username string, password string, email string) Movie(id long pk, order_id fk, title string, year short, genre string, category string) Order(id long pk, userId long fk, dateOfRent date, dateOfReturn date, active boolean) Order_Payment(id long pk, amount double, order_id long fk, success boolean) StarCast(id long pk, name string, movie_id long fk) Role(id long pk, title string, star_id long fk)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-1","title":"employee (empid, name) disk (diskid, name, in_stock, arrived_date) rent(empid, diskid, borrow_date, due_date, return_date, client_id, charge, overdue_charge, payment_type, card_type,care_number, .....)"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"-2","title":"My solution:  Before design the Classes; I would consider designing a database for this system. Once developed, it would obviously simplify the Classes Design [Consider composition, inheritance and delegation]. Consider creating Interface for most of the classes for extensibility. Consider creating Abstract class and inherit methods and properties from it; if there is a code reusage.  The major design patterns to be considered are: 1. Singleton for Processing classes 2. Data Access Objects for Database 3. Plain Old Java Objects for Database 4. Entity Classes for Database 5. Util Classes for Delegation and there are few I don't know. :)"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=292714","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"4","title":"Table CustomerOrder, columns customerid, orderid, orderdate.  Give a query for customers that placed orders today  Query to get the day in the last 30 days with the most orders  What is an index?  Why not add an index to all the columns?  What data structure to store index data?  Why a btree?    * Employees           o id           o name           o department_id           o start_date           o salary       * Departments           o id           o department    get max salary get all names and dept get dept that spends most on salary:   Write a program/script to find a file in the current directory and sub-directories, tools like find and grep are missing.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"select max(cnt) from ( select date, count(date) cnt   from customer_order (you can add where clause for last 30 days)    group by date )as temp"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"get dept that spends most on salary: \nselect dept_name from department WHERE dept_id IN (select dept_id, SUM(salary) from emp GROUP BY dept_id HAVING  MAX(SUM(salary)))"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"SELECT TOP 1 orderdate, count(*) from customerorder where orderdate between getdate()-30 and getdate() group by orderdate order by count(*) desc"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"query for todays order:  select customerid, orderid, orderdate from customer where orderdate=TO_DATE(31-DEC-2010,'DD-MON-YYY');  query for past 30 days   select customerid, orderid, orderdate from customer where orderdate > TO_DATE(31-DEC-2010,'DD-MON-YYY') AND orederdate <=TO_DATE(31-DEC-2010,'DD-MON-YYY') - 30;"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=13128680","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"2","title":"what is normalization","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"2","title":"Normalization is the efficiently way of organizing data in a database."},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Normalization by its english meaning means 'making consistent'. Thus normalization in the context of computer science is used in term of databases, meaning that it is a process of organizing fields and tables of the databases to decrease the amount of redundancy and dependency (clearly making more consistent)."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=320717","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"2","title":"what is left outer join.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"select * from b left outer join a on (a.col1 = b.col1) 1 1 2 2 5 null  select * from a FULL outer join b on (a=col1 = b.col1) 1 1 2 2 3 null null 5"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"table a:  col1 1 2 3 table b: col1 1 2 5  select * from a left outer join b on (a.col1 = b.col1) 1 1 2 2 3 null"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=1533","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"2","title":"Explain how to write a stored procedure in SQL","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Were you asked to write the function to balance abinary tree? Or just the balanced binary tree concept?"},{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"Khao, I think  it was asked to write stored procedure in SQL"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=3131705","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"1","title":"What is normalization?  What is outer join?","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"normalisation: normalisation is the process of reducing the redundancy and replication in the database design."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=2150671","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"1","title":"What are prepared statements? what is indexing and also what is sql injection and how do you prevent it.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"1","title":"Prepared statements are a capability whereby the SQL queries are compiled into a intermediate form. The server then hands the client a handle for these. After this the only thing that remains to be parsed on query execution are the parameter values. For example if you had a query select * from Foo where col=?  Where value of col depends upon (say) a user input. If you use prepared statements then the only thing that needs to be parsed by the server before query execution is the value of col. OTOH if you used regular queries the server would need to parse the incoming SQL (select * from ...) as well.  The second advantage of this security. If you send raw user input to the server I can try tricks like entering \"10; drop table Users\" in the dialog that you are getting the input from. So your final query would become select * from Foo where col=1; drop table Users; Now assuming you had a table called Users, I have just deleted that table. This is called SQL injection. With prepared statements this problem simply goes away.   Finally, indexing (in a DB context) is a way of optimizing look up of certain column (or sequence of columns) in a table. The database engine, then creates structures to quickly search for these columns, without requiring to scan the entire table."}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=67083","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"1","title":"Question involved indexing from DBMS.  Given a set of attributes how will you improve the retrieval time for a query involving these attributes.  -> You are allowed to change the physical storage  -> You can create index files -> You need to minimize block accesses and memory used.","interview_question_comments":[{"mm_name":"interview_question_comments","download_status":"UNPROCESSED","votes":"0","title":"http://en.wikipedia.org/wiki/Index_(database)"}]}},{"question":{"mm_name":"interview_question","location":"http://www.careercup.com/question?id=1749","download_status":"DOWNLOAD_DONE","votes":"0","answersCount":"0","title":"database question like self joint with tables given by him"}}]